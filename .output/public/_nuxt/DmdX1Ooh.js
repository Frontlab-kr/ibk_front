import{d as s,$ as t,a as e,b as a}from"./5NRiTyjF.js";const n=s("learning",{persist:!1,state:()=>({visibleMenu:!1,currentLesson:null,visibleLearnAttendanceQrCodeDialog:!1,reportDetail:null,surveyDetail:null,testQuestionList:null,testRemainingTime:20,lastLesson:null,lastLessonParam:null}),actions:{async getLastLesson(s){this.lastLessonParam=s;const n=await t(e().inqLastLesson(s));return this.lastLesson=a(n),this.lastLesson},async sendLastProgress(s){await t(e().mdfcCourseDegreeLessonLastInfo(s))},async sendProgressLog(s){await t(e().inqProgressLog(s))},async submitReport(s,a){await t(e().rgsnAssignmentSubmit(s,a))},async getReportDetail(s){const n=await t(e().inqAssignmentDetail(s));this.reportDetail=a(n)},async getSubmittedReport(s){const n=await t(e().inqAssignmentSubmit(s));return a(n)},async getSurveyDetail(s){const n=await t(e().inqSurvey(s));return this.surveyDetail=a(n),this.surveyDetail},async submitSurvey(s){await t(e().rgsnSurveySubmit({inVo:s}))},doAttendanceQR:async s=>await t(e().rgsnAttendanceQR(s)),async updateLessonSummary(s){await t(e().mdfcCourseDegreeLessonVodSummary(s))},async createLessonSummary(s){await t(e().rgsnCourseDegreeLessonSummary(s))},async getCourseStatus(s){const n=await t(e().checkCourseDegree(s));return a(n)},async getTest(s){const n=await t(e().inqExamEnter(s)),i=a(n);return this.testQuestionList=i.exam??[],i.answer},async submitTest(s,a=!1){await t(e().rgsnExamSubmit(s),{isLoading:a})}},getters:{}});export{n as u};
